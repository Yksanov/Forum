@model Forum.ViewModels.ChatViewModel

<h5 class="text-center">@Model.Thema.Title</h5>
<div class="d-flex justify-content-start">
    <p class="me-4">@Model.Thema.User</p>
    <p class="me-4">@Model.Thema.CreatedAt</p>
</div>

@if (User.Identity.IsAuthenticated && Model.CurrentUser != null && Model.CurrentUser.Id == Model.Thema.UserId)
{
    <div class="dropdown">
        <button class="border-0 bg-white" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="fa-solid fa-bars fa-beat fa-1xl"></i>
        </button>
        <ul class="dropdown-menu">
            <li>
                <a class="dropdown-item text-danger" asp-action="Delete" asp-controller="Thema" asp-route-id="@Model.Thema.Id">
                    Удалить
                </a>
            </li>
            <li>
                <a class="dropdown-item text-warning" asp-action="Edit" asp-controller="Thema" asp-route-id="@Model.Thema.Id">
                    Редактировать
                </a>
            </li>
        </ul>
    </div>
}


<div class="card border-2 border-dark h-25">
    <p>@Model.Thema.Content</p>
    <div class="d-flex justify-content-end pb-3 px-3">
        <button class="btn btn-secondary" id="sendButton">Ответить</button>
    </div>
</div>

<div class="card border-2 border-dark">
    <div id="chatWindow" style="height: 400px; overflow-y: scroll;">

        @{
            await Html.RenderPartialAsync("_MessagePartialView", Model);
        }
    </div>
    <textarea id="messageText" maxlength="100" placeholder="Введите сообщение..."></textarea>
    <span id="charCount" class="text-muted d-block">Осталось символов: 100</span>
    <span id="errorText" class="text-danger d-none">Сообщение не может быть длиннее 100 символов.</span>

</div>

@section Scripts {
    <script>
    $(document).ready(function() {
        const maxLength = 100;
        $('#messageText').on('input', function () {
            const textLength = $(this).val().length;
            const charsLeft = maxLength - textLength;

            $("#charCount").text(`Осталось символов: ${charsLeft}`);

            if (charsLeft >= 0) {
                $(this).removeClass('is-invalid');
                $('#errorText').addClass('d-none');
            }
        });

        $("#sendButton").click(function () {
            sendMessage();
        });

        $('#messageText').on('keypress', function (e) {
            if (e.which === 13) {
                e.preventDefault();
                sendMessage();
            }
        });

        function sendMessage() {
            let text = $("#messageText").val().trim();

            if (text === '') {
                $("#messageText").addClass('is-invalid');
                $('#errorText').text('Сообщение не может быть пустым.').removeClass('d-none');
                return;
            }

            if (text.length > 100) {
                $("#messageText").addClass('is-invalid');
                $('#errorText').text('Сообщение не может быть длиннее 100 символов').removeClass('d-none');
                return;
            }

            $('#messageText').removeClass('is-invalid');
            $('#errorText').addClass('d-none');

            let topicId = @Model.Thema.Id;
            $.ajax({
                url: '@Url.Action("SendMessage", "Thema")',
                type: 'POST',
                data: {text: text, topicId: topicId},
                success: function (response) {
                    $('#messageText').val('');
                    $('#charCount').text('Осталось символов: 100');

                    // Добавляем новое сообщение в конец
                    $('#chatWindow').append(response);

                    // Автоматическая прокрутка вниз
                    $('#chatWindow').scrollTop($('#chatWindow')[0].scrollHeight);
                },
                error: function () {
                    console.log("Ошибка при отправке сообщения.");
                }
            });
        }
    });

    function changePage(pageNumber) {
        $.ajax({
            url: '@Url.Action("GetMessages", "Thema")',
            type: 'GET',
            data: {'topicId' : '@Model.Thema.Id', 'page' : pageNumber},
            success: function (response) {
                repliesBlock.html(response);
                window.scrollTo(0, document.body.scrollHeight);
                replyInput.val('');
            },
            error: () => console.log('error on reply')
        });
    };
    </script>
}